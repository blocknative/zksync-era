{
  "db_name": "PostgreSQL",
<<<<<<<< HEAD:core/lib/dal/.sqlx/query-2def67eb8372245ed59e76e07d615598f5d22a3aebd893afddded0e3c6b94a3b.json
  "query": "\n            SELECT\n                number,\n                l1_batches.timestamp,\n                l1_tx_count,\n                l2_tx_count,\n                bloom,\n                priority_ops_onchain_data,\n                hash,\n                commitment,\n                l2_to_l1_messages,\n                used_contract_hashes,\n                compressed_initial_writes,\n                compressed_repeated_writes,\n                l2_l1_merkle_root,\n                rollup_last_leaf_index,\n                zkporter_is_available,\n                l1_batches.bootloader_code_hash,\n                l1_batches.default_aa_code_hash,\n                l1_batches.evm_emulator_code_hash,\n                aux_data_hash,\n                pass_through_data_hash,\n                meta_parameters_hash,\n                protocol_version,\n                compressed_state_diffs,\n                system_logs,\n                events_queue_commitment,\n                bootloader_initial_content_commitment,\n                pubdata_input,\n                fee_address\n            FROM\n                l1_batches\n            LEFT JOIN commitments ON commitments.l1_batch_number = l1_batches.number\n            JOIN protocol_versions ON protocol_versions.id = l1_batches.protocol_version\n            WHERE\n                eth_commit_tx_id IS NULL\n                AND number != 0\n                AND protocol_versions.bootloader_code_hash = $1\n                AND protocol_versions.default_account_code_hash = $2\n                AND commitment IS NOT NULL\n                AND (\n                    protocol_versions.id = $3\n                    OR protocol_versions.upgrade_tx_hash IS NULL\n                )\n            ORDER BY\n                number\n            LIMIT\n                $4\n            ",
========
  "query": "\n            SELECT\n                number,\n                l1_batches.timestamp,\n                l1_tx_count,\n                l2_tx_count,\n                bloom,\n                priority_ops_onchain_data,\n                hash,\n                commitment,\n                l2_to_l1_messages,\n                used_contract_hashes,\n                compressed_initial_writes,\n                compressed_repeated_writes,\n                l2_l1_merkle_root,\n                rollup_last_leaf_index,\n                zkporter_is_available,\n                l1_batches.bootloader_code_hash,\n                l1_batches.default_aa_code_hash,\n                aux_data_hash,\n                pass_through_data_hash,\n                meta_parameters_hash,\n                protocol_version,\n                compressed_state_diffs,\n                system_logs,\n                events_queue_commitment,\n                bootloader_initial_content_commitment,\n                pubdata_input,\n                l1_gas_price,\n                l2_fair_gas_price,\n                fair_pubdata_price\n            FROM\n                l1_batches\n                LEFT JOIN commitments ON commitments.l1_batch_number = l1_batches.number\n                JOIN protocol_versions ON protocol_versions.id = l1_batches.protocol_version\n            WHERE\n                eth_commit_tx_id IS NULL\n                AND number != 0\n                AND protocol_versions.bootloader_code_hash = $1\n                AND protocol_versions.default_account_code_hash = $2\n                AND commitment IS NOT NULL\n                AND (\n                    protocol_versions.id = $3\n                    OR protocol_versions.upgrade_tx_hash IS NULL\n                )\n            ORDER BY\n                number\n            LIMIT\n                $4\n            ",
>>>>>>>> 82ed8f925 (add `BatchFeeInput` to L1 batch models):core/lib/dal/.sqlx/query-63aa749a4a36711a5f58a0249dc475897bd7ee735707541571c694615df5ccf4.json
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "number",
        "type_info": "Int8"
      },
      {
        "ordinal": 1,
        "name": "timestamp",
        "type_info": "Int8"
      },
      {
        "ordinal": 2,
        "name": "l1_tx_count",
        "type_info": "Int4"
      },
      {
        "ordinal": 3,
        "name": "l2_tx_count",
        "type_info": "Int4"
      },
      {
        "ordinal": 4,
        "name": "bloom",
        "type_info": "Bytea"
      },
      {
        "ordinal": 5,
        "name": "priority_ops_onchain_data",
        "type_info": "ByteaArray"
      },
      {
        "ordinal": 6,
        "name": "hash",
        "type_info": "Bytea"
      },
      {
        "ordinal": 7,
        "name": "commitment",
        "type_info": "Bytea"
      },
      {
        "ordinal": 8,
        "name": "l2_to_l1_messages",
        "type_info": "ByteaArray"
      },
      {
        "ordinal": 9,
        "name": "used_contract_hashes",
        "type_info": "Jsonb"
      },
      {
        "ordinal": 10,
        "name": "compressed_initial_writes",
        "type_info": "Bytea"
      },
      {
        "ordinal": 11,
        "name": "compressed_repeated_writes",
        "type_info": "Bytea"
      },
      {
        "ordinal": 12,
        "name": "l2_l1_merkle_root",
        "type_info": "Bytea"
      },
      {
        "ordinal": 13,
        "name": "rollup_last_leaf_index",
        "type_info": "Int8"
      },
      {
        "ordinal": 14,
        "name": "zkporter_is_available",
        "type_info": "Bool"
      },
      {
        "ordinal": 15,
        "name": "bootloader_code_hash",
        "type_info": "Bytea"
      },
      {
        "ordinal": 16,
        "name": "default_aa_code_hash",
        "type_info": "Bytea"
      },
      {
        "ordinal": 17,
        "name": "evm_emulator_code_hash",
        "type_info": "Bytea"
      },
      {
        "ordinal": 18,
        "name": "aux_data_hash",
        "type_info": "Bytea"
      },
      {
        "ordinal": 19,
        "name": "pass_through_data_hash",
        "type_info": "Bytea"
      },
      {
        "ordinal": 20,
        "name": "meta_parameters_hash",
        "type_info": "Bytea"
      },
      {
        "ordinal": 21,
        "name": "protocol_version",
        "type_info": "Int4"
      },
      {
        "ordinal": 22,
        "name": "compressed_state_diffs",
        "type_info": "Bytea"
      },
      {
        "ordinal": 23,
        "name": "system_logs",
        "type_info": "ByteaArray"
      },
      {
        "ordinal": 24,
        "name": "events_queue_commitment",
        "type_info": "Bytea"
      },
      {
        "ordinal": 25,
        "name": "bootloader_initial_content_commitment",
        "type_info": "Bytea"
      },
      {
        "ordinal": 26,
        "name": "pubdata_input",
        "type_info": "Bytea"
      },
      {
<<<<<<<< HEAD:core/lib/dal/.sqlx/query-2def67eb8372245ed59e76e07d615598f5d22a3aebd893afddded0e3c6b94a3b.json
        "ordinal": 27,
        "name": "fee_address",
        "type_info": "Bytea"
========
        "ordinal": 26,
        "name": "l1_gas_price",
        "type_info": "Int8"
      },
      {
        "ordinal": 27,
        "name": "l2_fair_gas_price",
        "type_info": "Int8"
      },
      {
        "ordinal": 28,
        "name": "fair_pubdata_price",
        "type_info": "Int8"
>>>>>>>> 82ed8f925 (add `BatchFeeInput` to L1 batch models):core/lib/dal/.sqlx/query-63aa749a4a36711a5f58a0249dc475897bd7ee735707541571c694615df5ccf4.json
      }
    ],
    "parameters": {
      "Left": [
        "Bytea",
        "Bytea",
        "Int4",
        "Int8"
      ]
    },
    "nullable": [
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      true,
      false,
      false,
      true,
      true,
      true,
      true,
      true,
      true,
      true,
      true,
      true,
      true,
      true,
      true,
      true,
      false,
      true,
      true,
      true,
<<<<<<<< HEAD:core/lib/dal/.sqlx/query-2def67eb8372245ed59e76e07d615598f5d22a3aebd893afddded0e3c6b94a3b.json
      false
    ]
  },
  "hash": "2def67eb8372245ed59e76e07d615598f5d22a3aebd893afddded0e3c6b94a3b"
========
      false,
      false,
      false
    ]
  },
  "hash": "63aa749a4a36711a5f58a0249dc475897bd7ee735707541571c694615df5ccf4"
>>>>>>>> 82ed8f925 (add `BatchFeeInput` to L1 batch models):core/lib/dal/.sqlx/query-63aa749a4a36711a5f58a0249dc475897bd7ee735707541571c694615df5ccf4.json
}
